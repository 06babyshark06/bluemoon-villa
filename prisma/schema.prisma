// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Admin {
  id    Int     @id @default(autoincrement())
  email String  @unique
  password String 
  profile Profile?
}
model Profile {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  phoneNumber String
  location String?
  language String?
  skills String?
  admin Admin @relation(fields:[adminId],references:[id])
  adminId Int @unique
}
model Member {
  id Int @id @default(autoincrement())
  name String
  registerDate DateTime @default(now())
  leaveDate DateTime?
  relationship String
  home Home @relation(fields:[homeId],references:[id],onDelete: Cascade)
  homeId Int
}
model Home {
  id Int @id @default(autoincrement())
  houseNumber Int
  size Int
  cars Int
  bikes Int
  isLiving Boolean @default(true)
  members Member[]
  payments Payment[]
}
model Bill {
  id Int @id @default(autoincrement())
  billName String
  consumption Int @default(1)
  money Int
  type String
  payment Payment?
}
model Payment {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  payAt DateTime?
  paid Boolean @default(false)
  home Home @relation(fields:[homeId],references:[id],onDelete: Cascade)
  homeId Int 
  bill Bill @relation(fields:[billId],references:[id],onDelete: Cascade)
  billId Int @unique
}
